name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

  build-release:
    name: Build Release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: rustleaf
            asset_name: rustleaf-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: rustleaf
            asset_name: rustleaf-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: rustleaf
            asset_name: rustleaf-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: rustleaf
            asset_name: rustleaf-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: rustleaf.exe
            asset_name: rustleaf-windows-amd64.exe
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
      
      - name: Build release binary
        run: cross build --release --target ${{ matrix.target }}
      
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: ./target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          name: ${{ matrix.asset_name }}

  publish-crate:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Publish rustleaf-macros-internal
        run: cargo publish -p rustleaf-macros-internal --token ${{ secrets.CARGO_TOKEN }}
        continue-on-error: true
      
      - name: Wait for crates.io to update
        run: sleep 30
      
      - name: Publish rustleaf-macros
        run: cargo publish -p rustleaf-macros --token ${{ secrets.CARGO_TOKEN }}
        continue-on-error: true
      
      - name: Wait for crates.io to update
        run: sleep 30
      
      - name: Publish rustleaf
        run: cargo publish -p rustleaf --token ${{ secrets.CARGO_TOKEN }}