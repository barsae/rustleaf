// Edge cases for string interpolation

// Empty string interpolation
var empty_str = "";
var with_empty = "Value: ${empty_str}";
assert(with_empty == "Value: ");

// Interpolation at start and end
var start_interp = "${42} is the answer";
assert(start_interp == "42 is the answer");

var end_interp = "The answer is ${42}";
assert(end_interp == "The answer is 42");

// Only interpolation, no text
var only_interp = "${100}";
assert(only_interp == "100");

// Whitespace in expressions
var with_spaces = "${  10  +  20  }";
assert(with_spaces == "30");

// Complex nested expressions with braces - using variables instead of dict access
var values_list = [1, 2, 3];
var nested = "First value: ${values_list[0]}";
assert(nested == "First value: 1");

// Function calls with parameters
fn add(a, b) {
    a + b
}

var func_with_params = "Sum: ${add(5, 7)}";
assert(func_with_params == "Sum: 12");

// Comparison operators in interpolation
var x = 10;
var y = 5;
var comparison = "${x} > ${y} is ${x > y}";
assert(comparison == "10 > 5 is true");

// Logical operations
var logic_test = "true and false is ${true and false}";
assert(logic_test == "true and false is false");