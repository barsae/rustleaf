// Test nested function declarations
fn outer(x) {
    fn inner(y) {
        x + y
    }
    inner(10)
}

var result = outer(5);
assert(result == 15);

// Test closure capturing variables
fn make_adder(increment) {
    fn add(value) {
        value + increment
    }
    add
}

var add5 = make_adder(5);
var result2 = add5(10);
assert(result2 == 15);

// Test counter closure with mutable capture
fn make_counter() {
    var count = 0;
    fn increment() {
        count = count + 1;
        count
    }
    increment
}

var counter = make_counter();
var first = counter();
assert(first == 1);
var second = counter();
assert(second == 2);