// Test basic recursion
fn factorial(n) {
    if n <= 1 {
        1
    } else {
        n * factorial(n - 1)
    }
}

var result1 = factorial(5);
assert(result1 == 120);

var result2 = factorial(0);
assert(result2 == 1);

// Test indirect recursion
fn is_even(n) {
    if n == 0 {
        true
    } else {
        is_odd(n - 1)
    }
}

fn is_odd(n) {
    if n == 0 {
        false
    } else {
        is_even(n - 1)
    }
}

var result3 = is_even(4);
assert(result3 == true);

var result4 = is_odd(4);
assert(result4 == false);

var result5 = is_even(3);
assert(result5 == false);

var result6 = is_odd(3);
assert(result6 == true);