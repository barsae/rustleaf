// <p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with $1$ and $2$, the first $10$ terms will be:
// $$1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \dots$$</p>
// <p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>

fn solve_euler_002(limit) {
    var a = 1;
    var b = 2;
    var sum = 0;
    
    while b < limit {
        if b % 2 == 0 {
            sum += b;
        }
        
        var temp = a + b;
        a = b;
        b = temp;
    }
    
    sum
}

// Test with the example sequence: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89
// Even values under 100: 2, 8, 34 = 44
var test_result = solve_euler_002(100);
assert(test_result == 44);

// Solve the actual problem
var result = solve_euler_002(4000000);
print("The sum of even-valued Fibonacci terms below 4 million is: ${result}");
assert(result == 4613732);
